#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include "assert.h"


int Comparison(int* a, int* b);
int NOD(int a, int b);
int ost(int a, int b);
int Solution(int a, int b, int* ans1, int* ans2);

int main() {
    int a, b, a0, b0, compare, nod, ans1, ans2;
    assert(scanf("%d%d", &a, &b) == 2);


    compare = Comparison(&a, &b);

    a0 = a;
    b0 = b;

    nod = NOD(a, b);

    a = a0 / nod;
    b = b0 / nod;

    if (a % b == 0) {
        if (compare) {
            printf("%d %d %d\n", 1, 0, nod);
            return 0;
        } else {
            printf("%d %d %d\n", 0, 1, nod);
            return 0;
        }
    }

    Solution(a, b, &ans1, &ans2);

    if (compare){
        int c;
        c = ans1;
        ans1 = ans2;
        ans2 = c;
    }

    printf("%d %d %d\n", ans1, ans2, nod);
    return 0;
}


int Comparison(int* a, int* b) {
    int c;
    if (*a > *b){
        return 0;
    }
    c = *a;
    *a = *b;
    *b = c;
    return 1;
}

int NOD(int a, int b) {
    int c;
    c = ost(a, b);
    while (c != 0) {
        a = b;
        b = c;
        c = ost(a, b);
    }
    return b;
}

int Solution(int a, int b, int* ans1, int* ans2) {
    int n, p, q, counta2, countb2, counta1, countb1, counta, countb;
    q = a % b;
    counta1 = 0;
    countb1 = 1;
    counta = 1;
    countb = 0;
    n = 0;

    if (q == 1) {
        counta1 = 1;
        countb1 = -a / b;
        n = 1;
    } else {
        while (q != 1) {
            if (q == 0) {
                break;
            }
            p = a / b;
            if (a % b < 0){
                if (b < 0){
                    p += 1;
                } else{
                    p -= 1;
                }
            }
            q = ost(a, b);
            counta2 = counta - counta1 * p;
            countb2 = countb - countb1 * p;
            a = b;
            b = q;
            counta = counta1;
            countb = countb1;
            counta1 = counta2;
            countb1 = countb2;
            n++;
        }
    }
    *ans1 = counta1;
    *ans2 = countb1;

    return 0;
}

int ost(int a, int b){
    int r;
    assert(b != 0);
    r = a % b;
    if (r < 0){
        r += abs(b);
    }
    return r;
}
