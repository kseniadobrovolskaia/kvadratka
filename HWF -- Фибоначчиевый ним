#include <stdio.h>

int fib(int n);
int fib_num(int x);
int next_turn(int total, int possible);

int main() {
    int total, possible, move,  move_c;
    printf("Number of sticks:");
    scanf("%d", &total);
    possible = total - 1;

    while (total > 0){
        printf("How many sticks do you take? -");
        scanf("%d", &move);
        while (move > possible || move < 1){
            printf("You can't take that much!\nYou can take %d sticks.\nHow many sticks do you take? -:", possible);
            scanf("%d", &move);
        }
        possible = 2 * move;
        total = total - move;
        if (total == 0){
            printf("You have won! Congratulations!\n");
            break;
        }
        move_c = next_turn(total, possible);
        printf("I think I'll take %d sticks.\nThere are %d sticks left.\n",move_c, total -= move_c);
        if (total > 0){
            printf("You can take %d sticks.\n",  possible = 2 * move_c);
        }
        else{
            printf("Oh! You've lost!\n");
            break;
        }
    }

    return 0;
}

int fib(int n) {
    int first = 1, second = 1;
    int idx;
    if (n == 1) return 1;
    for (idx = 2; idx <= n ; ++idx) {
        int tmp = second;
        second = (second + first);
        first = tmp;
    }
    return second;
}

int fib_num(int x) {
    int fib_system[1000] = {0};
    int ans;
    int fb[1000] = {1, 1};
    ans = 1;

    while (x != 0) {
        int k;
        k = 2;
        while (x >= (fb[k] = fib(k))) {
            k++;
        }
        fib_system[k - 2] = 1;
        x = x - fb[k - 1];
    }

    while (fib_system[ans - 1] == 0){
        ans++;
    }

    return ans;
}

int next_turn(int total, int possible) {
    int ans = 1;
    int number = fib(fib_num(total));

    if (total <= possible){
        return total;
    }

    if (number <= possible){
        if (total > 3 * number){
            ans = number;
        }
    }

    return ans;
}

